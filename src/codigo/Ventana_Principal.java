/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package codigo;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import compilerTools.Functions;
import compilerTools.Token;
import compilerTools.Directory;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.WindowAdapter;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
/**
 *
 * @author estebanramoncontrerasortega
 */
public class Ventana_Principal extends javax.swing.JFrame {
    NumeroLinea numerolinea;
    private String title;
    private Directory directorio;
    private ArrayList<Token> tokens;
    private ArrayList<Token> tokensError;
    
    /**
     * Creates new form Ventana_Principal
     */
    public Ventana_Principal() {
        initComponents();
        inicializar();
    }
    
     private void inicializar (){
        
        setTitle("#WheelScript");
        setLocationRelativeTo(null);
        
        directorio = new Directory(this, jtpCode, title, ".wscript");
        
         addWindowListener(new WindowAdapter (){
             public void windowClosing(){
                 directorio.Exit();
                 System.exit(0);
             }
         });
        
        //Numero de linea
        numerolinea = new NumeroLinea(jtpCode);
        jScrollPane1.setRowHeaderView(numerolinea);
        
        // Listener para actualizar números de línea
        jtpCode.getDocument().addDocumentListener(new DocumentListener() {
        @Override
        public void insertUpdate(DocumentEvent e) {
            numerolinea.repaint();
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            numerolinea.repaint();
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
            numerolinea.repaint();
        }
    });
        tokens = new ArrayList<>();
        tokensError = new ArrayList<>();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Barra_Nav = new javax.swing.JMenuItem();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtpCode = new javax.swing.JTextArea();
        Panel_Errores = new javax.swing.JScrollPane();
        jtaOutputConsole = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnAbrir = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnTablaSimbolos = new javax.swing.JButton();
        btCompilar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTokens = new javax.swing.JTable();

        Barra_Nav.setText("jMenuItem6");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 248, 231));

        jPanel3.setBackground(new java.awt.Color(255, 248, 231));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jtpCode.setColumns(20);
        jtpCode.setRows(5);
        jtpCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtpCodeKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jtpCode);

        Panel_Errores.setBackground(new java.awt.Color(255, 255, 255));
        Panel_Errores.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jtaOutputConsole.setColumns(20);
        jtaOutputConsole.setRows(5);
        jtaOutputConsole.setDisabledTextColor(java.awt.Color.white);
        jtaOutputConsole.setEnabled(false);
        Panel_Errores.setViewportView(jtaOutputConsole);

        jPanel1.setBackground(new java.awt.Color(182, 239, 212));

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnAbrir.setText("Abrir");
        btnAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnTablaSimbolos.setText("Tabla de simbolos");
        btnTablaSimbolos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTablaSimbolosActionPerformed(evt);
            }
        });

        btCompilar.setText("Compilar");
        btCompilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCompilarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(btnNuevo)
                .addGap(18, 18, 18)
                .addComponent(btnAbrir)
                .addGap(27, 27, 27)
                .addComponent(btnGuardar)
                .addGap(18, 18, 18)
                .addComponent(btnTablaSimbolos)
                .addGap(18, 18, 18)
                .addComponent(btCompilar)
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevo)
                    .addComponent(btnAbrir)
                    .addComponent(btnGuardar)
                    .addComponent(btnTablaSimbolos)
                    .addComponent(btCompilar))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        tblTokens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Componente Léxico", "Lexema", "[Línea, Columa]"
            }
        ));
        jScrollPane2.setViewportView(tblTokens);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 695, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Panel_Errores, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Panel_Errores, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnTablaSimbolosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTablaSimbolosActionPerformed
        JFrame tokenViwer = new JFrame("Tabla de simbolos");
    tokenViwer.setSize(600, 500); // Aumenté el tamaño para mejor visualización
    tokenViwer.setLocationRelativeTo(null);
    tokenViwer.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    
    JTextArea textArea = new JTextArea();
    textArea.setEditable(false);
    textArea.setFont(new Font("Monospaced", Font.PLAIN, 14));
    
    StringBuilder tokens = new StringBuilder();
    tokens.append("LISTA COMPLETA DE TOKENS\n");
    tokens.append("========================\n\n");
        
        tokens.append("1. IDENTIFICADORES Y LITERALES:\n");
        tokens.append("   IDENTIFICADOR\n");
        tokens.append("   NUMERO\n");
        tokens.append("   CADENA\n\n");
        
        tokens.append("2. COMANDOS DE ACCIÓN:\n");
        tokens.append("   AVANZAR\n");
        tokens.append("   GIRAR\n");
        tokens.append("   DETENER\n");
        tokens.append("   ESPERAR\n");
        tokens.append("   MOSTRAR\n");
        tokens.append("   LEER\n");
        tokens.append("   RETROCEDER\n");
        tokens.append("   ENCENDER\n");
        tokens.append("   APAGAR\n");
        tokens.append("   BOCINA\n\n");
        
        tokens.append("3. ESTRUCTURA DE CONTROL:\n");
        tokens.append("   REPETIR\n");
        tokens.append("   MIENTRAS\n");
        tokens.append("   SI\n");
        tokens.append("   ENTONCES\n");
        tokens.append("   SINO\n");
        tokens.append("   FIN\n");
        tokens.append("   ROMPER\n");
        tokens.append("   CONTINUAR\n\n");
        
        tokens.append("4. ESTRUCTURA DEL PROGRAMA:\n");
        tokens.append("   INICIO\n");
        tokens.append("   FUNCION\n");
        tokens.append("   RETORNAR\n\n");
        
        tokens.append("5. DECLARACIONES:\n");
        tokens.append("   VARIABLE\n");
        tokens.append("   CONSTANTE\n\n");
        
        tokens.append("6. SENSORES Y CONDICIONES:\n");
        tokens.append("   SENSOR_FRONTAL\n");
        tokens.append("   SENSOR_IZQUIERDO\n");
        tokens.append("   SENSOR_DERECHO\n");
        tokens.append("   ACTIVADO\n");
        tokens.append("   INACTIVO\n\n");
        
        tokens.append("7. TIPOS DE DATOS:\n");
        tokens.append("   ENTERO\n");
        tokens.append("   DECIMAL\n");
        tokens.append("   TEXTO\n\n");
        
        tokens.append("8. OPERADORES:\n");
        tokens.append("   IGUAL            ( = )\n");
        tokens.append("   DIFERENTE        ( != )\n");
        tokens.append("   MAYOR            ( > )\n");
        tokens.append("   MENOR            ( < )\n");
        tokens.append("   MAYOR_IGUAL      ( >= )\n");
        tokens.append("   MENOR_IGUAL      ( <= )\n");
        tokens.append("   AND              ( y )\n");
        tokens.append("   OR               ( o )\n");
        tokens.append("   NO               ( negación )\n\n");
        
        tokens.append("9. SÍMBOLOS:\n");
        tokens.append("   LLAVE_ABRE       ( { )\n");
        tokens.append("   LLAVE_CIERRA     ( } )\n");
        tokens.append("   CORCHETE_ABRE    ( [ )\n");
        tokens.append("   CORCHETE_CIERRA  ( ] )\n");
        tokens.append("   PAR_ABRE         ( ( )\n");
        tokens.append("   PAR_CIERRA       ( ) )\n");
        tokens.append("   COMA            ( , )\n");
        tokens.append("   PUNTOCOMA       ( ; )\n");
        tokens.append("   COMILLA_DOBLE   ( \" )\n");
        tokens.append("   COMENTARIO      ( // )\n\n");
        
        tokens.append("10. OTROS:\n");
        tokens.append("    ERROR\n");
        
        textArea.setText(tokens.toString());
        add(new JScrollPane(textArea), BorderLayout.CENTER);
        textArea.setText(tokens.toString());
        JScrollPane scrollPane = new JScrollPane(textArea);
        tokenViwer.getContentPane().add(scrollPane, BorderLayout.CENTER);
    
        tokenViwer.setVisible(true);
    }//GEN-LAST:event_btnTablaSimbolosActionPerformed

    private void btCompilarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCompilarActionPerformed
        if(getTitle().contains("*")|| getTitle().equals(title)){
            if(directorio.Save()){
                compilar();
            }
        } else {
            compilar();
        }
        
        JFrame frame = new JFrame("Tabla de tokens");
        frame.setSize(300, 500);
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.add(jScrollPane2);
        frame.setVisible(true);
        frame.setLocationRelativeTo(null);
        frame.setResizable(true);
    }//GEN-LAST:event_btCompilarActionPerformed

    private void jtpCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtpCodeKeyReleased
        int keyCode = evt.getKeyCode();
        if ((keyCode >= 65 && keyCode <= 90) ||    // A-Z
            (keyCode >= 48 && keyCode <= 57) ||    // 0-9
            (keyCode >= 97 && keyCode <= 122) ||   // a-z
            (keyCode != 27 &&                     // No Escape
             !(keyCode >= 37 && keyCode <= 40) && // No flechas
             !(keyCode >= 16 && keyCode <= 18) && // No Shift, Ctrl, Alt
             keyCode != 524 &&                    // No tecla de menú (tecla Windows derecha)
             keyCode != 20))                      // No Caps Lock
        {
            if (!getTitle().contains("*")) {
                setTitle(getTitle() + "*");
            }
              
        }
    }//GEN-LAST:event_jtpCodeKeyReleased

    private void btnAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirActionPerformed
        // TODO add your handling code here:
        javax.swing.JFileChooser fileChooser = new javax.swing.JFileChooser();
    int result = fileChooser.showOpenDialog(null);
    if (result == javax.swing.JFileChooser.APPROVE_OPTION) {
        File selectedFile = fileChooser.getSelectedFile();
        try (BufferedReader reader = new BufferedReader(
                new InputStreamReader(new FileInputStream(selectedFile), "UTF8"))) {
            jtpCode.setText(""); // Limpiar el área de texto
            String line;
            while ((line = reader.readLine()) != null) {
                jtpCode.append(line + "\n");
            }
            setTitle(selectedFile.getName()); // Cambiar título de ventana
        } catch (IOException ex) {
            System.err.println("Error al leer el archivo: " + ex.getMessage());
        }
    }
    }//GEN-LAST:event_btnAbrirActionPerformed

    /**
     * @param args the command line arguments
     */
    
   
    
    private void compilar() {
        limpiarCampos();
        analisisLexico();
        llenarTablaTokens();
        //imprimirConsola();
    }
    
private void analisisLexico() {
    try {
        File codigo = new File("codigo.wscript");
        FileOutputStream salida = new FileOutputStream(codigo);
        byte[] contenido = jtpCode.getText().getBytes();
        salida.write(contenido);

        BufferedReader entrada = new BufferedReader(
            new InputStreamReader(new FileInputStream(codigo), "UTF8")
        );

        WheelScriptLexer lexer = new WheelScriptLexer(entrada);
        tokens.clear();
        tokensError.clear();

        compilerTools.Token token;
        while ((token = lexer.yylex()) != null) {
            tokens.add(token);
            if ("ERROR".equals(token.getLexicalComp())) {
                tokensError.add(token);
            }
        }

if (!tokensError.isEmpty()) {
    StringBuilder errores = new StringBuilder("Errores léxicos encontrados:\n\n");
    for (compilerTools.Token t : tokensError) {
        errores.append("Línea ").append(t.getLine())
               .append(" Columna ").append(t.getColumn())
               .append(" → ").append(t.getLexeme()).append("\n");
    }

    jtaOutputConsole.setForeground(Color.RED);
    jtaOutputConsole.setText("");
    jtaOutputConsole.setText(errores.toString());

    return; // 
}

jtaOutputConsole.setForeground(Color.BLACK);
jtaOutputConsole.setText("Compilación exitosa. Sin errores léxicos.");
llenarTablaTokens();

    } catch (Exception ex) {
        jtaOutputConsole.setForeground(Color.RED);
        jtaOutputConsole.setText("Error: " + ex.getMessage());
    }

}
    
    private void llenarTablaTokens(){
        tokens.forEach(token -> {
            Object[] data = new Object[]{token.getLexicalComp(), token.getLexeme(),  "[" + token.getLine() + ", " + token.getColumn() + "]"};
            Functions.addRowDataInTable(tblTokens, data);
        });
        
    }
    
    private void limpiarCampos(){
        Functions.clearDataInTable(tblTokens);
        jtaOutputConsole.setText("");
        tokens.clear();
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana_Principal().setVisible(true);
            }
        });
    }
    
    public void clearAllComp() {
        jtaOutputConsole.setText("");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Barra_Nav;
    private javax.swing.JScrollPane Panel_Errores;
    private javax.swing.JButton btCompilar;
    private javax.swing.JButton btnAbrir;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnTablaSimbolos;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jtaOutputConsole;
    private javax.swing.JTextArea jtpCode;
    private javax.swing.JTable tblTokens;
    // End of variables declaration//GEN-END:variables
}
