/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package codigo;

import compilerTools.CodeBlock;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import compilerTools.Functions;
import compilerTools.Token;
import compilerTools.Directory;
import compilerTools.ErrorLSSL;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.WindowAdapter;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.nio.file.Files;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;

/**
 *
 * @author estebanramoncontrerasortega made in MacBook
 */
public class Ventana_Principal extends javax.swing.JFrame {

    NumeroLinea numerolinea;
    private String title;
    private Directory directorio;
    private ArrayList<Token> tokens;
    private ArrayList<Token> tokensError;
    private ArrayList<ErrorLSSL> errores;
    private boolean codeHasBeenCompiled = false;
    private File archivoActual = null; // para saber si se abrió o guardó un archivo
    private boolean cambiosGuardados = false; // para saber si se necesita guardar antes de compilar
    private ArrayList<Token> tablaDeSimbolos;

    public Ventana_Principal() {
        initComponents();
        inicializar();
    }

    private void inicializar() {

        setTitle("#WheelScript");
        setLocationRelativeTo(null);
        btCompilar.setEnabled(false);

        directorio = new Directory(this, jtpCode, title, ".wscript");

        addWindowListener(new WindowAdapter() {
            public void windowClosing() {
                directorio.Exit();
                System.exit(0);
            }
        });

        //Numero de linea
        numerolinea = new NumeroLinea(jtpCode);
        jScrollPane1.setRowHeaderView(numerolinea);
        jtpCode.setEditable(true);

        // Listener para actualizar números de línea
        jtpCode.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                numerolinea.repaint();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                numerolinea.repaint();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                numerolinea.repaint();
            }
        });
        tokens = new ArrayList<>();
        tokensError = new ArrayList<>();
        errores = new ArrayList<>();
        tablaDeSimbolos = new ArrayList<>();
        jtpCode.getDocument().addDocumentListener(new DocumentListener() {
            public void insertUpdate(DocumentEvent e) {
                cambiosGuardados = false;
            }

            public void removeUpdate(DocumentEvent e) {
                cambiosGuardados = false;
            }

            public void changedUpdate(DocumentEvent e) {
                cambiosGuardados = false;
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Barra_Nav = new javax.swing.JMenuItem();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtpCode = new javax.swing.JTextArea();
        Panel_Errores = new javax.swing.JScrollPane();
        jtaOutputConsole = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnAbrir = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnTablaSimbolos = new javax.swing.JButton();
        btCompilar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTokens = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        lblNombreArchivo = new javax.swing.JLabel();

        Barra_Nav.setText("jMenuItem6");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 248, 231));

        jPanel3.setBackground(new java.awt.Color(255, 248, 231));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jtpCode.setColumns(20);
        jtpCode.setRows(5);
        jtpCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtpCodeKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jtpCode);

        Panel_Errores.setBackground(new java.awt.Color(255, 255, 255));
        Panel_Errores.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jtaOutputConsole.setColumns(20);
        jtaOutputConsole.setRows(5);
        jtaOutputConsole.setDisabledTextColor(java.awt.Color.white);
        Panel_Errores.setViewportView(jtaOutputConsole);

        jPanel1.setBackground(new java.awt.Color(182, 239, 212));

        btnNuevo.setBackground(new java.awt.Color(255, 255, 255));
        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Icon/nuevoarchivo.png"))); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnAbrir.setBackground(new java.awt.Color(255, 255, 255));
        btnAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Icon/abrirarchivo.png"))); // NOI18N
        btnAbrir.setText("Abrir");
        btnAbrir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAbrir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirActionPerformed(evt);
            }
        });

        btnGuardar.setBackground(new java.awt.Color(255, 255, 255));
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Icon/guardar.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnTablaSimbolos.setBackground(new java.awt.Color(255, 255, 255));
        btnTablaSimbolos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Icon/tablasimbolos.png"))); // NOI18N
        btnTablaSimbolos.setText("Tabla de simbolos");
        btnTablaSimbolos.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnTablaSimbolos.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnTablaSimbolos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTablaSimbolosActionPerformed(evt);
            }
        });

        btCompilar.setBackground(new java.awt.Color(255, 255, 255));
        btCompilar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Icon/compilar.png"))); // NOI18N
        btCompilar.setText("Compilar");
        btCompilar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btCompilar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btCompilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCompilarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAbrir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGuardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTablaSimbolos, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btCompilar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTablaSimbolos)
                    .addComponent(btnGuardar)
                    .addComponent(btnAbrir)
                    .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btCompilar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(7, Short.MAX_VALUE))
        );

        tblTokens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Componente Léxico", "Lexema", "[Línea, Columa]"
            }
        ));
        jScrollPane2.setViewportView(tblTokens);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Tabla de Tokens");

        lblNombreArchivo.setText("Archivo Nuevo");
        lblNombreArchivo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblNombreArchivo.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblNombreArchivo)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(Panel_Errores, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 695, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Panel_Errores, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblNombreArchivo)
                        .addGap(60, 60, 60)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
        limpiarCampos();
        jtpCode.setText("");
        lblNombreArchivo.setText("Archivo Nuevo");
        jtaOutputConsole.setText("");
        btCompilar.setEnabled(false);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        if (archivoActual == null) { // si es nuevo
            JFileChooser fileChooser = new JFileChooser();
            if (fileChooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                archivoActual = fileChooser.getSelectedFile();
                guardarArchivo();
                actualizarNombreArchivo();
                btCompilar.setEnabled(true);

            }
        } else { // si ya tiene nombre
            guardarArchivo();
            btCompilar.setEnabled(true);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnTablaSimbolosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTablaSimbolosActionPerformed
        mostrarTablaDeSimbolos();
    }//GEN-LAST:event_btnTablaSimbolosActionPerformed

    private void btCompilarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCompilarActionPerformed
        boolean exito = analisisLexico(); // O simplemente: boolean exito = compilar();

        if (exito) {
            JFrame frame = new JFrame("Tabla de tokens");
            frame.setSize(300, 500);
            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            frame.add(jScrollPane2);
            frame.setVisible(true);
            frame.setLocationRelativeTo(null);
            frame.setResizable(true);
            
        }


    }//GEN-LAST:event_btCompilarActionPerformed

    private void jtpCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtpCodeKeyReleased
        int keyCode = evt.getKeyCode();
        if ((keyCode >= 65 && keyCode <= 90)
                || // A-Z
                (keyCode >= 48 && keyCode <= 57)
                || // 0-9
                (keyCode >= 97 && keyCode <= 122)
                || // a-z
                (keyCode != 27
                && // No Escape
                !(keyCode >= 37 && keyCode <= 40)
                && // No flechas
                !(keyCode >= 16 && keyCode <= 18)
                && // No Shift, Ctrl, Alt
                keyCode != 524
                && // No tecla de menú (tecla Windows derecha)
                keyCode != 20)) // No Caps Lock
        {
            if (!getTitle().contains("*")) {
                setTitle(getTitle() + "*");
            }

        }
    }//GEN-LAST:event_jtpCodeKeyReleased

    private void btnAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirActionPerformed

        JFileChooser fileChooser = new JFileChooser();
        if (fileChooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            archivoActual = fileChooser.getSelectedFile();
            try {
                String contenido = new String(Files.readAllBytes(archivoActual.toPath()));
                jtpCode.setText(contenido);
                cambiosGuardados = true;
                actualizarNombreArchivo(); // función que actualiza el nombre visible
                btCompilar.setEnabled(true);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Error al abrir el archivo.");
            }
        }
    }//GEN-LAST:event_btnAbrirActionPerformed

    /**
     * @param args the command line arguments
     */
    private boolean compilar() {
        limpiarCampos();
        tablaDeSimbolos.clear();

        boolean exito = analisisLexico();

        if (exito) {
            llenarTablaTokens();
        }

        return exito;

        //imprimirConsola();
    }

    private void guardarArchivo() {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(archivoActual))) {
            writer.write(jtpCode.getText());
            cambiosGuardados = true;
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Error al guardar el archivo.");
        }
    }

    private boolean analisisLexico() {
        limpiarCampos();
        try {
            String codigoFuente = jtpCode.getText().trim();

            if (codigoFuente.isEmpty()) {
                jtaOutputConsole.setForeground(Color.RED);
                jtaOutputConsole.setText("NO HAY CODIGO QUE COMPILAR.");
                return false;
            }

            File codigo = new File("codigo.wscript");
            FileOutputStream salida = new FileOutputStream(codigo);
            byte[] contenido = jtpCode.getText().getBytes();
            salida.write(contenido);
            salida.close();

            BufferedReader entrada = new BufferedReader(
                    new InputStreamReader(new FileInputStream(codigo), "UTF8")
            );

            WheelScriptLexer lexer = new WheelScriptLexer(entrada);
            tokens.clear();
            tokensError.clear();

            compilerTools.Token token;
            while ((token = lexer.yylex()) != null) {
                tokens.add(token);
                if (token.getLexicalComp().startsWith("ERROR")) {
                    tokensError.add(token);
                }
            }
            
            tablaDeSimbolos.addAll(tokens);

            if (!tokensError.isEmpty()) {
                StringBuilder errores = new StringBuilder("Errores léxicos encontrados:\n\n");
                for (compilerTools.Token t : tokensError) {
                    errores.append("Línea ").append(t.getLine())
                            .append(" → ").append(t.getLexeme()).append("\n");
                    
                    String tipo = t.getLexicalComp();
                    switch (tipo) {
                        case "ERROR_IDENTIFICADOR_INVALIDO":
                        errores.append("Sugerencia: Un identificador no puede comenzar con un número. Usa algo como 'velocidad9'\n\n");
                        break;
                        case "ERROR_CADENA_NO_CERRADA":
                            errores.append("Sugerencia: Falta la comilla final (\"). Asegúrate de cerrar la cadena.\n\n");
                            break;
                        case "ERROR_NUMERO_MAL_FORMADO":
                            errores.append("Sugerencia: El número contiene múltiples puntos decimales. Usa solo uno (ej. 5.4).\n\n");
                            break;
                        case "ERROR_CARACTER_INVALIDO":
                            errores.append("Sugerencia: Usa solo caracteres permitidos en el lenguaje (letras, números, símbolos válidos).\n\n");
                            break;
                        case "ERROR":
                        default:
                            errores.append("Sugerencia: Revisa la sintaxis del token ingresado.\n\n");
                        break;
                    }
                }

                jtaOutputConsole.setForeground(Color.RED);
                jtaOutputConsole.setText("");
                jtaOutputConsole.setText(errores.toString());
                return false;
            }

            jtaOutputConsole.setForeground(Color.BLUE);
            jtaOutputConsole.setText("COMPILACION EXITOSA. SIN ERRORES LÉXICOS.");
            llenarTablaTokens();

        } catch (Exception ex) {
            jtaOutputConsole.setForeground(Color.RED);
            jtaOutputConsole.setText("Error: " + ex.getMessage());
        }
        return false;
    }

    private void llenarTablaTokens() {
        tokens.forEach(token -> {
            Object[] data = new Object[]{token.getLexicalComp(), token.getLexeme(), "[" + token.getLine() + ", " + token.getColumn() + "]"};
            Functions.addRowDataInTable(tblTokens, data);
        });

    }
    
    private void mostrarTablaDeSimbolos(){
        if(tablaDeSimbolos.isEmpty()){
            JOptionPane.showMessageDialog(this, "No hay simbolos cargados.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        String[] columnas = {"Componente Léxico"," Lexema","Linea"};
        String [][] datos = new String[tablaDeSimbolos.size()][3];
        
        for (int i= 0; i< tablaDeSimbolos.size(); i++){
            Token t = tablaDeSimbolos.get(i);
            datos[i][0] = t.getLexicalComp();
            datos[i][1] = t.getLexeme();
            datos[i][2] = String.valueOf(t.getLine());
        }
        
        JTable tabla = new JTable(datos, columnas);
        JScrollPane scroll = new JScrollPane(tabla);
    
        JFrame frame = new JFrame("Tabla de Símbolos");
        frame.setSize(400, 300);
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.add(scroll);
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);
    }

    private void limpiarCampos() {
        Functions.clearDataInTable(tblTokens);
        jtaOutputConsole.setText("");
        tokens.clear();
    }

    private void actualizarNombreArchivo() {
        if (archivoActual != null) {
            lblNombreArchivo.setText("Archivo: " + archivoActual.getName());
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana_Principal().setVisible(true);
            }
        });
    }

    public void clearAllComp() {
        jtaOutputConsole.setText("");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Barra_Nav;
    private javax.swing.JScrollPane Panel_Errores;
    private javax.swing.JButton btCompilar;
    private javax.swing.JButton btnAbrir;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnTablaSimbolos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jtaOutputConsole;
    private javax.swing.JTextArea jtpCode;
    private javax.swing.JLabel lblNombreArchivo;
    private javax.swing.JTable tblTokens;
    // End of variables declaration//GEN-END:variables
}
