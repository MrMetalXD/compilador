//-----------------------------
// Paquete
//-----------------------------
package codigo;

import java_cup.runtime.Symbol;


parser code 
{:
    private Symbol s;

    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
    }
:};

//-----------------------------
// Terminales sin tipos
//-----------------------------
terminal mostrar, variable, si, entonces, sino, inicio, fin;
terminal avanzar, detener, girar, retroceder;
terminal igual, llave_izq, llave_der;
terminal CADENA, IDENTIFICADOR, ESTADO, NUMERO;

//-----------------------------
// No terminales
//-----------------------------
non terminal programa, instrucciones, instruccion, declaracion_variable,
              asignacion, mostrar_instr, accion, condicional, sino_opcional,
              condicion, expresion, mostrar_op;

//-----------------------------
// Reglas de Producción
//-----------------------------
programa ::= inicio llave_izq instrucciones llave_der fin
           {: System.out.println("Análisis sintáctico exitoso"); :}
           ;

instrucciones ::= instruccion instrucciones | ;

instruccion ::= declaracion_variable | asignacion | mostrar_instr | accion | condicional;

declaracion_variable ::= variable IDENTIFICADOR igual expresion;

asignacion ::= IDENTIFICADOR igual expresion;

mostrar_instr ::= mostrar mostrar_op;

mostrar_op ::= CADENA | IDENTIFICADOR;

accion ::= avanzar | detener | girar | retroceder;

condicional ::= si condicion entonces llave_izq instrucciones llave_der sino_opcional;

sino_opcional ::= sino llave_izq instrucciones llave_der | ;

condicion ::= IDENTIFICADOR igual ESTADO;

expresion ::= NUMERO | IDENTIFICADOR | CADENA;